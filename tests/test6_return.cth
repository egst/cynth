Int a = { # evaluated block
    Int b = { # evaluated block
        return 2; # Return from the inner block.
    };
    # b == 2;

    # evaluated if expression:
    Int c = if (2 == 3) { # evaluated block
        return 1;
    } else {
        return 2;
    };
    # c = 2;

    # executed when statement:
    # (when is never evaluated - it is never an expression)
    when (1 == Int(2.6)) { # executed block
        return b + c + 1; # Return is propagated to tho outer block.
        # 5
    };

    # executed if expression:
    # (syntactically an expression, but still executed)
    if (1 == Int(true)) { # executed block
        return b + c + 2;
        # 6
    } else {
        return b + c + 3;
        # 7
    };

    # executed if statement:
    # (contains statement branches => syntactically a statement and never evaluated)
    if (1 == Int(false))
        return b + c + 4
        # 8
        # TODO: Allow a redundant semicolon here.
    else when (1)
        return b + c + 5;
        # 9
};

# should be 6
return a;
