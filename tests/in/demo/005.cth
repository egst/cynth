type Seed = Int [1];
Int const randMax = 65536; // 2 ** 16 (integral exponentiation not implemented yet)
Int (Seed) random = {
    Int const a = 1103515245;
    Int const c = 12345;
    return Int fn (Seed const seed) {
        seed[0] = (a * seed[0] + c) % randMax;
        return seed[0];
    };
};

Seed seed;

//buffer [1] out out1 = buffer [1] (Float fn () Float(random(seed)) / Float(randMax));

buffer [1] out out1 = buffer [1] (Float fn (Int t) {
    Int in knob1;
    Float noise = Float(random(seed)) / Float(randMax);
    return
        0.5 * sin(Float(t) / Float(srate) * 2. * pi * 200.) +
        (noise * (Float(knob1[]) / 100.))
        //(noise * .1)
});
